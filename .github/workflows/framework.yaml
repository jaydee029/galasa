#
# Copyright contributors to the Galasa project
#
# SPDX-License-Identifier: EPL-2.0
#
name: Framework Main Build

on:
  workflow_call:
    inputs:
      jacoco_enabled:
        description: 'True if Jacoco code coverage should be enabled (set to "false" for release builds)'
        required: false
        default: 'true'
        type: string
      sign_artifacts:
        description: 'True if the artifacts built should be signed (set to "false" for development branch builds)'
        required: false
        default: 'true'
        type: string

env:
  REGISTRY: ghcr.io
  NAMESPACE: ${{ github.repository_owner }}
  BRANCH: ${{ github.ref_name }}
  SWAGGER_VERSION: "3.0.41"
    
jobs:
  log-github-ref:
    name: Log the GitHub ref this workflow is running on (Branch or tag that received dispatch)
    runs-on: ubuntu-latest
    steps:
      - name: Log GitHub ref of workflow
        run: |
          echo "This workflow is running on GitHub ref ${{ env.BRANCH }}"

  build-framework:
    name: Build Framework using openapi2beans and gradle
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            modules/framework
      
      - name: Setup JDK 
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'semeru'
        
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.9
          gradle-home-cache-excludes: |
            caches/modules-2/files-2.1/dev.galasa/**

      # This is required so the openapi2beans image can be run in the next step.
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        env:
          WRITE_GITHUB_PACKAGES_USERNAME: ${{ vars.WRITE_GITHUB_PACKAGES_USERNAME }}
          WRITE_GITHUB_PACKAGES_TOKEN: ${{ secrets.WRITE_GITHUB_PACKAGES_TOKEN }}
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.WRITE_GITHUB_PACKAGES_USERNAME }}
          password: ${{ env.WRITE_GITHUB_PACKAGES_TOKEN }}
      
      - name: Build servlet beans with openapi2beans
        env:
          YAML_LOCATION: "modules/framework/galasa-parent/dev.galasa.framework.api.openapi/src/main/resources/openapi.yaml"
          OUTPUT_LOCATION: "modules/framework/galasa-parent/dev.galasa.framework.api.beans/src/main/java"
          PACKAGE: "dev.galasa.framework.api.beans.generated"
        run: |
          docker run --rm -v ${{ github.workspace }}:/var/workspace ghcr.io/${{ env.NAMESPACE }}/openapi2beans:main generate --yaml var/workspace/${{ env.YAML_LOCATION }} --output var/workspace/${{ env.OUTPUT_LOCATION }} --package ${{ env.PACKAGE }}

      - name: Download platform from this workflow
        id: download-platform
        uses: actions/download-artifact@v4
        with:
          name: platform
          path: modules/artifacts

      - name: Download wrapping artifacts from this workflow
        id: download-wrapping
        uses: actions/download-artifact@v4
        with:
          name: wrapping
          path: modules/artifacts

      - name: Download gradle artifacts from this workflow
        id: download-gradle
        uses: actions/download-artifact@v4
        with:
          name: gradle
          path: modules/artifacts

      - name: Download maven artifacts from this workflow
        id: download-maven
        uses: actions/download-artifact@v4
        with:
          name: maven
          path: modules/artifacts

      - name: Build Framework source code
        working-directory: modules/framework
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ORG_GRADLE_PROJECT_signingKeyId:  ${{ secrets.GPG_KEYID }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          set -o pipefail
          gradle -b galasa-parent/build.gradle check publish --info \
          --no-daemon --console plain \
          -Dorg.gradle.jvmargs=-Xmx5120M \
          -PsourceMaven=${{ github.workspace }}/modules/artifacts \
          -PcentralMaven=https://repo.maven.apache.org/maven2/ \
          -PtargetMaven=${{ github.workspace }}/modules/framework/repo \
          -PjacocoEnabled=${{ inputs.jacoco_enabled }} \
          -PisMainOrRelease=${{ inputs.sign_artifacts }} 2>&1 | tee build.log

      - name: Upload Gradle build log
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: framework-gradle-build-log
          path: modules/framework/build.log

      - name: Upload framework artifacts
        uses: actions/upload-artifact@v4
        with:
          name: framework
          path: modules/framework/repo

  build-rest-api-documentation:
    name: Build REST API documentation using openapi2beans and gradle
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            modules/framework
      
      - name: Setup JDK 
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'semeru'

      - name: Fetch swagger-cli cache
        id: swagger-cache
        uses: actions/cache@v4.2.3
        with:
          path: swagger-codegen-cli.jar
          key: swagger-codegen-${{ env.SWAGGER_VERSION }}-cli.jar

      - name: Install Swagger CLI
        if: steps.swagger-cache.outputs != 'true'
        working-directory: modules/framework
        run: |
          wget https://repo1.maven.org/maven2/io/swagger/codegen/v3/swagger-codegen-cli/${{ env.SWAGGER_VERSION }}/swagger-codegen-cli-${{ env.SWAGGER_VERSION }}.jar -O swagger-codegen-cli.jar
      
      - name: Generate Swagger docs
        working-directory: modules/framework
        run: |
          java -jar swagger-codegen-cli.jar generate -i galasa-parent/dev.galasa.framework.api.openapi/src/main/resources/openapi.yaml -l html2 -o docs/generated/galasaapi

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        env:
          WRITE_GITHUB_PACKAGES_USERNAME: ${{ vars.WRITE_GITHUB_PACKAGES_USERNAME }}
          WRITE_GITHUB_PACKAGES_TOKEN: ${{ secrets.WRITE_GITHUB_PACKAGES_TOKEN }}
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.WRITE_GITHUB_PACKAGES_USERNAME }}
          password: ${{ env.WRITE_GITHUB_PACKAGES_TOKEN }}
        
      - name: Extract metadata for restapidoc-site image
        id: metadata
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/restapidoc-site
                
      - name: Build and push restapidoc-site image
        uses: docker/build-push-action@v5
        with:
          context: modules/framework
          file: modules/framework/dockerfiles/dockerfile.restapidocsite
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}  
      
      - name: Recycle application in ArgoCD
        # Skip this job for forks
        if: ${{ github.repository_owner == 'galasa-dev' }}
        env: 
            ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_TOKEN }}
        run: |
          docker run --env ARGOCD_AUTH_TOKEN=${{ env.ARGOCD_AUTH_TOKEN }} --rm ghcr.io/${{ env.NAMESPACE }}/argocdcli:main app actions run ${{ env.BRANCH }}-maven-repos restart --kind Deployment --resource-name restapidocsite-${{ env.BRANCH }} --server argocd.galasa.dev

      - name: Wait for app health in ArgoCD
        # Skip this job for forks
        if: ${{ github.repository_owner == 'galasa-dev' }}
        env: 
          ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_TOKEN }}
        run: |
          docker run --env ARGOCD_AUTH_TOKEN=${{ env.ARGOCD_AUTH_TOKEN }} --rm ghcr.io/${{ env.NAMESPACE }}/argocdcli:main app wait ${{ env.BRANCH }}-maven-repos --resource apps:Deployment:restapidocsite-${{ env.BRANCH }} --health --server argocd.galasa.dev

  report-failure:
    # Skip this job for forks
    if: ${{ failure() && github.repository_owner == 'galasa-dev' }}
    name: Report failure in workflow
    runs-on: ubuntu-latest
    needs: [log-github-ref, build-framework, build-rest-api-documentation]

    steps:
      - name: Report failure in workflow to Slack
        env: 
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        run : |
          docker run --rm ghcr.io/galasa-dev/galasabld-ibm:main slackpost workflows --repo "galasa" --module "framework" --workflowName "${{ github.workflow }}" --workflowRunNum "${{ github.run_id }}" --ref "${{ env.BRANCH }}" --hook "${{ env.SLACK_WEBHOOK }}"
